We will be optimizing crud operations and also implement http request with dio
Link to tutorial: https://hackernoon.com/optimizing-crud-operations-in-flutter-how-to-implement-http-requests-with-dio


we will be
-implemtning http request
-using clean clean architecture
-and using dio



Clean Architecture is a software design philosophy that can help you build more modular, maintainable, and testable Flutter apps.
It does this by separating the code into layers, with each layer having a specific responsibility.


Dio is a HTTP client library that simplifies the process of making HTTP request and changeling responses in dart
Benefits include:
-simplified HTTP request handling
-efficient caching


We are following a feature first approach, it contains domain, infrastructure and presentation

._(); this means the constructor is private, this constructor can only be accessed within the same file (library) and not from other files.
By making the constructor private, you restrict the instantiation of the class from outside the file it is defined in.
This is useful when you want to control the creation of objects of the class and enforce certain constraints or patterns, such as singleton or factory patterns.